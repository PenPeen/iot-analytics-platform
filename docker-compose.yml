services:
  # LocalStack - AWS サービスエミュレーション
  localstack:
    container_name: localstack_main
    image: localstack/localstack:3.0
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - DEBUG=1
      - SERVICES=dynamodb,s3,sns,sqs
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=ap-northeast-1
      - DYNAMODB_SHARE_DB=1
      - PERSISTENCE=1
    volumes:
      - "./localstack/data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - iot_platform

  # Redis - キャッシュ・セッション管理
  redis:
    image: redis:7-alpine
    container_name: redis_main
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - iot_platform

  # PostgreSQL - Rails標準データベース（メタデータ用）
  postgres:
    image: postgres:15-alpine
    container_name: postgres_main
    environment:
      POSTGRES_DB: iot_platform_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - iot_platform

  # PostgreSQL for Unleash - Feature Flags管理
  postgres_unleash:
    image: postgres:15-alpine
    container_name: postgres_unleash
    environment:
      POSTGRES_DB: unleash
      POSTGRES_USER: unleash
      POSTGRES_PASSWORD: unleash_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_unleash_data:/var/lib/postgresql/data
    networks:
      - iot_platform

  # Unleash - Feature Flags管理
  unleash:
    image: unleashorg/unleash-server:latest
    container_name: unleash_main
    ports:
      - "4242:4242"
    environment:
      - DATABASE_URL=postgres://unleash:unleash_password@postgres_unleash:5432/unleash
      - DATABASE_SSL=false
      - LOG_LEVEL=warn
      - INIT_FRONTEND_API_TOKENS=default:development.unleash-insecure-frontend-api-token
      - INIT_CLIENT_API_TOKENS=default:development.unleash-insecure-api-token
    depends_on:
      - postgres_unleash
    networks:
      - iot_platform

  # Rails アプリケーション
  rails:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rails_main
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/iot_platform_development
      - REDIS_URL=redis://redis:6379/0
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=ap-northeast-1
      - UNLEASH_URL=http://unleash:4242/api/
      - UNLEASH_INSTANCE_ID=iot-platform-rails
      - UNLEASH_APP_NAME=iot-platform
      - UNLEASH_API_TOKEN=default:development.unleash-insecure-api-token
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    depends_on:
      - postgres
      - redis
      - localstack
      - unleash
    networks:
      - iot_platform
    command: >
      bash -c "
        mkdir -p tmp/pids tmp/cache log &&
        bundle install &&
        bin/rails db:create db:migrate &&
        bin/rails server -b 0.0.0.0
      "

  # Sidekiq - バックグラウンドジョブ処理
  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sidekiq_main
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/iot_platform_development
      - REDIS_URL=redis://redis:6379/0
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=ap-northeast-1
      - UNLEASH_URL=http://unleash:4242
      - UNLEASH_INSTANCE_ID=iot-platform-sidekiq
      - UNLEASH_APP_NAME=iot-platform
      - UNLEASH_API_TOKEN=default:development.unleash-insecure-api-token
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    depends_on:
      - postgres
      - redis
      - localstack
      - unleash
    networks:
      - iot_platform
    command: >
      bash -c "
        mkdir -p tmp/pids tmp/cache log &&
        bundle install &&
        bundle exec sidekiq
      "

volumes:
  postgres_data:
  redis_data:
  bundle_cache:
  postgres_unleash_data:

networks:
  iot_platform:
    driver: bridge
